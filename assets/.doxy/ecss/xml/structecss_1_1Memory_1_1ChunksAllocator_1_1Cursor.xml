<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor" kind="struct" language="C++" prot="public">
    <compoundname>ecss::Memory::ChunksAllocator::Cursor</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1adb3e5e0b0e038cde597479d06b09ee20" prot="private" static="no" mutable="no">
        <type>std::byte *</type>
        <definition>std::byte* ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::chunkBase</definition>
        <argsstring></argsstring>
        <name>chunkBase</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::chunkBase</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="74" column="11" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a988127d1fba153422a1bc3926141ff58" prot="private" static="no" mutable="no">
        <type>std::byte *</type>
        <definition>std::byte* ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::chunkEnd</definition>
        <argsstring></argsstring>
        <name>chunkEnd</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::chunkEnd</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="75" column="11" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a7b589f6afa0af5fe8223da55c922ffbc" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::chunkIdx</definition>
        <argsstring></argsstring>
        <name>chunkIdx</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::chunkIdx</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="70" column="8" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a77e884d49b00c5bfbcacdaeb12f2a917" prot="private" static="no" mutable="no">
        <type>std::vector&lt; void * &gt;</type>
        <definition>std::vector&lt;void*&gt; ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::chunks</definition>
        <argsstring></argsstring>
        <name>chunks</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::chunks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="67" column="13" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1afa55b6d140792ba284cbab198ac0cc2b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::chunksCount</definition>
        <argsstring></argsstring>
        <name>chunksCount</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::chunksCount</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="68" column="8" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a7de7296ca219c298c3b2d0561affdec0" prot="private" static="no" mutable="no">
        <type>std::byte *</type>
        <definition>std::byte* ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::curB</definition>
        <argsstring></argsstring>
        <name>curB</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::curB</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="73" column="11" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1aa404a5a62cf2f439743198f8acf67f4d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::linIdx</definition>
        <argsstring></argsstring>
        <name>linIdx</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::linIdx</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="71" column="8" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1afbaa9123dc8f3c68b6b256120f194844" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::shift</definition>
        <argsstring></argsstring>
        <name>shift</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::shift</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="77" column="8" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="77" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1acf317e20481eb8388ce8ae158d563f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::Cursor</definition>
        <argsstring>()=default</argsstring>
        <name>Cursor</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::Cursor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1ad4737d0aafc0b1165e46f4eaab1dc09e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::Cursor</definition>
        <argsstring>(const ChunksAllocator *allocator, size_t index=0) noexcept</argsstring>
        <name>Cursor</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::Cursor</qualifiedname>
        <param>
          <type>const ChunksAllocator *</type>
          <declname>allocator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="45" column="1" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a0d1eaa734aa3673aeba9f1fe52f82034" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE size_t</type>
        <definition>FORCE_INLINE size_t ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::linearIndex</definition>
        <argsstring>() const noexcept</argsstring>
        <name>linearIndex</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::linearIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="63" column="21" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a60716dc972f9beccebf2de7dc7494d0b" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE</type>
        <definition>FORCE_INLINE ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="61" column="23" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a92bdbd020302e086d81e285c0ab5a99a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE bool</type>
        <definition>FORCE_INLINE bool ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::operator!=</definition>
        <argsstring>(const Cursor &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::operator!=</qualifiedname>
        <param>
          <type>const Cursor &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="59" column="19" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1afda0822568b04a2e8711f5909b427a37" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE <ref refid="structecss_1_1Memory_1_1Sector" kindref="compound">Sector</ref> *</type>
        <definition>FORCE_INLINE Sector * ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="55" column="21" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a277bd738b0f109648ff8f3f64d716223" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE Cursor &amp;</type>
        <definition>FORCE_INLINE Cursor &amp; ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::operator+</definition>
        <argsstring>(size_t value) noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::operator+</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="53" column="21" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1af9b0becc4387d49af9ca5c9be9052cfc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE Cursor &amp;</type>
        <definition>FORCE_INLINE Cursor &amp; ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="52" column="21" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a6c919f9b1a4f785c1a0aa60d40d82a7b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE <ref refid="structecss_1_1Memory_1_1Sector" kindref="compound">Sector</ref> *</type>
        <definition>FORCE_INLINE Sector * ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="56" column="21" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a83549c02590d1fc808f2eaaaf4ff0e00" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE bool</type>
        <definition>FORCE_INLINE bool ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::operator==</definition>
        <argsstring>(const Cursor &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::operator==</qualifiedname>
        <param>
          <type>const Cursor &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="58" column="19" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a3761195ac895b8cf3d55a1cca5bf3992" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE std::byte *</type>
        <definition>FORCE_INLINE std::byte * ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::rawPtr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rawPtr</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::rawPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="64" column="24" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="64" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1ac63dcb23970f5a42081c73730eb83fbe" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE void</type>
        <definition>FORCE_INLINE void ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::nextChunk</definition>
        <argsstring>() noexcept</argsstring>
        <name>nextChunk</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::nextChunk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="87" column="19" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="87" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a36a0043eeaa537ddeba3fa97f1e20278" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE void</type>
        <definition>FORCE_INLINE void ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::setLinear</definition>
        <argsstring>(size_t newIdx) noexcept</argsstring>
        <name>setLinear</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::setLinear</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>newIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="98" column="19" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="98" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1ac5c6811ecf7d81346e3415b67e3d4fca" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>FORCE_INLINE void</type>
        <definition>FORCE_INLINE void ecss::Memory::ChunksAllocator&lt; ChunkCapacity &gt;::Cursor::step</definition>
        <argsstring>() noexcept</argsstring>
        <name>step</name>
        <qualifiedname>ecss::Memory::ChunksAllocator::Cursor::step</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/ChunksAllocator.h" line="79" column="19" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="79" bodyend="85"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ecss/memory/ChunksAllocator.h" line="42" column="1" bodyfile="ecss/memory/ChunksAllocator.h" bodystart="42" bodyend="110"/>
    <listofallmembers>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1adb3e5e0b0e038cde597479d06b09ee20" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>chunkBase</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a988127d1fba153422a1bc3926141ff58" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>chunkEnd</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a7b589f6afa0af5fe8223da55c922ffbc" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>chunkIdx</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a77e884d49b00c5bfbcacdaeb12f2a917" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>chunks</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1afa55b6d140792ba284cbab198ac0cc2b" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>chunksCount</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a7de7296ca219c298c3b2d0561affdec0" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>curB</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1acf317e20481eb8388ce8ae158d563f2f" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>Cursor</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1ad4737d0aafc0b1165e46f4eaab1dc09e" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>Cursor</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a0d1eaa734aa3673aeba9f1fe52f82034" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>linearIndex</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1aa404a5a62cf2f439743198f8acf67f4d" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>linIdx</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1ac63dcb23970f5a42081c73730eb83fbe" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>nextChunk</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a60716dc972f9beccebf2de7dc7494d0b" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>operator bool</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a92bdbd020302e086d81e285c0ab5a99a" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>operator!=</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1afda0822568b04a2e8711f5909b427a37" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>operator*</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a277bd738b0f109648ff8f3f64d716223" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>operator+</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1af9b0becc4387d49af9ca5c9be9052cfc" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>operator++</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a6c919f9b1a4f785c1a0aa60d40d82a7b" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>operator-&gt;</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a83549c02590d1fc808f2eaaaf4ff0e00" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>operator==</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a3761195ac895b8cf3d55a1cca5bf3992" prot="public" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>rawPtr</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1a36a0043eeaa537ddeba3fa97f1e20278" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>setLinear</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1afbaa9123dc8f3c68b6b256120f194844" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>shift</name></member>
      <member refid="structecss_1_1Memory_1_1ChunksAllocator_1_1Cursor_1ac5c6811ecf7d81346e3415b67e3d4fca" prot="private" virt="non-virtual"><scope>ecss::Memory::ChunksAllocator::Cursor</scope><name>step</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
