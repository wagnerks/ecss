<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4" kind="struct" language="C++" prot="public">
    <compoundname>ecss::Memory::detail::SectorsMap&lt; false &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1ac6953134bbd2e7d290fce1e2b25d02f1" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structecss_1_1Memory_1_1Sector" kindref="compound">Sector</ref> * &gt;</type>
        <definition>std::vector&lt;Sector*&gt; ecss::Memory::detail::SectorsMap&lt; false &gt;::sectorsMap</definition>
        <argsstring></argsstring>
        <name>sectorsMap</name>
        <qualifiedname>ecss::Memory::detail::SectorsMap&lt; false &gt;::sectorsMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/SectorsArray.h" line="97" column="13" bodyfile="ecss/memory/SectorsArray.h" bodystart="97" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1a694e9fd485be791bfaef39ade8ac66dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>FORCE_INLINE size_t</type>
        <definition>FORCE_INLINE size_t ecss::Memory::detail::SectorsMap&lt; false &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <qualifiedname>ecss::Memory::detail::SectorsMap&lt; false &gt;::capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/SectorsArray.h" line="94" column="21" bodyfile="ecss/memory/SectorsArray.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1a6db1da335d786c61ca1b1cea1125e1a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>FORCE_INLINE <ref refid="structecss_1_1Memory_1_1Sector" kindref="compound">Sector</ref> *</type>
        <definition>FORCE_INLINE Sector * ecss::Memory::detail::SectorsMap&lt; false &gt;::findSector</definition>
        <argsstring>(SectorId id) const</argsstring>
        <name>findSector</name>
        <qualifiedname>ecss::Memory::detail::SectorsMap&lt; false &gt;::findSector</qualifiedname>
        <param>
          <type>SectorId</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/SectorsArray.h" line="92" column="21" bodyfile="ecss/memory/SectorsArray.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1ab3c8ec8b43872641c05af89dbb4eceb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>FORCE_INLINE <ref refid="structecss_1_1Memory_1_1Sector" kindref="compound">Sector</ref> *</type>
        <definition>FORCE_INLINE Sector * ecss::Memory::detail::SectorsMap&lt; false &gt;::getSector</definition>
        <argsstring>(SectorId id) const</argsstring>
        <name>getSector</name>
        <qualifiedname>ecss::Memory::detail::SectorsMap&lt; false &gt;::getSector</qualifiedname>
        <param>
          <type>SectorId</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/SectorsArray.h" line="93" column="21" bodyfile="ecss/memory/SectorsArray.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1ade1070bf72b7205befc3015ff064a928" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FORCE_INLINE void</type>
        <definition>FORCE_INLINE void ecss::Memory::detail::SectorsMap&lt; false &gt;::storeVector</definition>
        <argsstring>()</argsstring>
        <name>storeVector</name>
        <qualifiedname>ecss::Memory::detail::SectorsMap&lt; false &gt;::storeVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ecss/memory/SectorsArray.h" line="95" column="19" bodyfile="ecss/memory/SectorsArray.h" bodystart="95" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ecss/memory/SectorsArray.h" line="91" column="1" bodyfile="ecss/memory/SectorsArray.h" bodystart="91" bodyend="98"/>
    <listofallmembers>
      <member refid="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1a694e9fd485be791bfaef39ade8ac66dc" prot="public" virt="non-virtual"><scope>ecss::Memory::detail::SectorsMap&lt; false &gt;</scope><name>capacity</name></member>
      <member refid="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1a6db1da335d786c61ca1b1cea1125e1a9" prot="public" virt="non-virtual"><scope>ecss::Memory::detail::SectorsMap&lt; false &gt;</scope><name>findSector</name></member>
      <member refid="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1ab3c8ec8b43872641c05af89dbb4eceb6" prot="public" virt="non-virtual"><scope>ecss::Memory::detail::SectorsMap&lt; false &gt;</scope><name>getSector</name></member>
      <member refid="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1ac6953134bbd2e7d290fce1e2b25d02f1" prot="public" virt="non-virtual"><scope>ecss::Memory::detail::SectorsMap&lt; false &gt;</scope><name>sectorsMap</name></member>
      <member refid="structecss_1_1Memory_1_1detail_1_1SectorsMap_3_01false_01_4_1ade1070bf72b7205befc3015ff064a928" prot="public" virt="non-virtual"><scope>ecss::Memory::detail::SectorsMap&lt; false &gt;</scope><name>storeVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
